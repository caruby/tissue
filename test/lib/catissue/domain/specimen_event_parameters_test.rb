require File.join(File.dirname(__FILE__), '..', 'test_case')
require 'catissue/defaults_test_fixture'

class SpecimenEventParametersTest < Test::Unit::TestCase
  include CaTissue::TestCase

  def setup
    super
    specimen = defaults.specimen
    @sep = CaTissue::SpecimenEventParameters.create_parameters(:frozen, specimen, :user => specimen.specimen_collection_group.receiver, :freeze_method => 'Cryobath')
  end

  def test_defaults
    verify_defaults(@sep)
  end

  def test_missing_scg
    @sep.specimen_collection_group = nil
    assert_raises(ValidationError, "Parameters without SCG passes SCG validation") { @sep.validate }
  end

  def test_java_date
    @sep.timestamp = now = Java.now
    verify_defaults(@sep)
    assert_equal(now.to_ruby_date.to_s, @sep.timestamp.to_s, "Java timestamp incorrect")
  end

  def test_ruby_date
    @sep.timestamp = now = DateTime.now
    verify_defaults(@sep)
    assert_equal(now.to_s, @sep.timestamp.to_s, "Ruby timestamp incorrect")
  end

  def test_owner
    assert_same(@sep.specimen, @sep.owner, "Specimen SEP owner incorrect")
  end
  
  ## DATABASE TESTS ##

  def test_scg_event_parameters_update
    scg = @sep.specimen.specimen_collection_group
    assert_nothing_raised("SCG not created") { database.create(scg) }
    logger.debug { "Finding autogenerated #{scg.qp} CEP..." }
    cep = scg.collection_event_parameters
    assert_not_nil(cep, "Autogenerated CEP not found")
    assert_not_nil(cep.identifier, "Autogenerated CEP identifier not set")
    cep.collection_procedure = 'Lavage'
    logger.debug { "Updating autogenerated #{scg.qp} CEP #{cep}..." }
    verify_save(cep)
  end

  def test_specimen_event_parameters_create
    verify_save(@sep)
    tmpl = @sep.copy(:identifier)
    logger.debug { "Verifying updated #{@sep} user fetch..." }
    assert_not_nil(@sep.user, "User not found")
    # update the parameters
    @sep.freeze_method = 'Cryostat'
    verify_save(@sep)
  end
end